#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        kha {
            bindings = <&kp LBKT>;
            key-positions = <6 7>;
        };

        hrdsgn {
            bindings = <&kp RBKT>;
            key-positions = <7 8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
  &kp Q        &kp W        &kp E                &kp R         &kp T                                  &kp Y    &kp U          &kp I         &kp O        &kp P
  &hml LGUI A  &hml LALT S  &hml LEFT_CONTROL D  &hml LSHFT F  &kp G                                  &kp H    &hmr RSHIFT J  &hmr RCTRL K  &hmr LALT L  &hmr RGUI SEMICOLON
  &kp Z        &kp X        &kp C                &kp V         &kp B                                  &kp N    &kp M          &kp COMMA     &kp DOT      &kp SQT
                                                 &kp TAB       &kt COMMA  &lt 1 SPACE    &lt 2 ENTER  &kt DOT  &kp BACKSPACE
            >;
        };

        nav {
            bindings = <
  &kp LS(DEL)  &kp LS(HOME)      &kp LS(UP)     &kp LS(END)      &kp DEL                        &kp PG_UP     &kp HOME         &kp UP         &kp END      &kp N0
  &kp LC(A)    &kp LS(LEFT)      &kp LS(DOWN)   &kp LS(RIGHT)    &kp ENTER                      &kp PG_DN     &kp LEFT         &kp DOWN       &kp RIGHT    &kp LC(END)
  &kp LC(Z)    &kp LS(LC(HOME))  &kp LC(MINUS)  &kp LS(LC(END))  &kp LC(PLUS)                   &kp LC(HOME)  &kt LC(PAGE_UP)  &kp LC(PG_DN)  &kp LC(END)  &none
                                                &trans           &trans        &trans    &mo 3  &trans        &trans
            >;
        };

        sym {
            bindings = <
  &none      &kp LT         &kp EQUAL      &kp GT    &kp GRAVE                   &kp CARET     &kp LBKT     &kp UNDER  &kp RBKT     &none
  &kp N1     &kp N2         &kp N3         &kp N4    &kp N5                      &kp N6        &kp N7       &kp N8     &kp N9       &kp N0
  &kp GRAVE  &kp LS(TILDE)  &kp LS(COLON)  &kp SEMI  &kp BSLH                    &kp LS(PIPE)  &kp LS(DQT)  &kp MINUS  &kp LS(DQT)  &kp LS(QMARK)
                                           &trans    &trans     &mo 3    &trans  &trans        &trans
            >;
        };

        adj {
            bindings = <
  &bootloader  &kp F1        &kp F2         &kp F3         &kp F4                     &bt BT_SEL 0  &bt BT_SEL 1         &bt BT_SEL 2       &bt BT_SEL 3        &bt BT_CLR
  &kp LGUI     &hml LALT F5  &hml LSHFT F6  &hml LCTRL F7  &kp F8                     &out OUT_BLE  &hmr RCTRL C_VOL_DN  &hmr RSHFT C_MUTE  &hmr LALT C_VOL_UP  &kp RGUI
  &none        &kp F9        &kp F10        &kp F11        &kp F12                    &out OUT_USB  &kp C_PREV           &kp C_PP           &kp C_NEXT          &studio_unlock
                                            &trans         &trans   &trans    &trans  &trans        &trans
            >;
        };

        layer_4 {
            bindings = <
  &kp V  &kp L  &kp H  &kp G    &kp K                          &kp Q    &kp F     &kp O    &kp U     &kp J
  &kp S  &kp R  &kp N  &kp T    &kp B                          &kp Y    &kp C     &kp A    &kp E     &kp I
  &kp Z  &kp X  &kp M  &kp D    &kp P                          &kp SQT  &kp W     &kp DOT  &kp SEMI  &kp COMMA
                       &kp TAB  &to 0  &kp SPACE    &kp ENTER  &trans   &kp BSPC
            >;
        };
    };
};
